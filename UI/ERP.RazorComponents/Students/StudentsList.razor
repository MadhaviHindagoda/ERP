@using ERP.Application.StudentApp.Students.Interfaces
@using ERP.Domain.Core.Entity;

@inject NavigationManager NavigationManager
@inject IViewStudentsByNameUseCase ViewStudentsByNameUseCase

<MudTable Items="@_students">
    <HeaderContent>
        <MudTh>Number</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>RegNB</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Mobile NB</MudTh>
        @* <MudTh>Image</MudTh> *@
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="regno">@context.RegistrationNum</MudTd>
        <MudTd DataLabel="fullname">@context.FirstName @context.LastName </MudTd>
        <MudTd DataLabel="email">@context.Email</MudTd>
        <MudTd DataLabel="regnb">@context.RegistrationNum</MudTd>
        <MudTd DataLabel="id">@context.NationalID</MudTd>
        <MudTd DataLabel="mobile">@context.PhoneNumber</MudTd>

        @* <MudTd DataLabel="image">
            <MudImage Src="images/woman.png" Width="40" />
        </MudTd> *@
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {



    private List<Student> _students = new List<Student>();







    [Parameter]







    public string SearchTerm { get; set; } = string.Empty;















    protected override async Task OnInitializedAsync()







    {















        _students = (await ViewStudentsByNameUseCase.ExecuteAsync("")).ToList();







    }















    protected override async Task OnParametersSetAsync()







    {







        _students = (await ViewStudentsByNameUseCase.ExecuteAsync(SearchTerm)).ToList();







    }























    void Edit(int studentId)







    {







        NavigationManager.NavigateTo($"/editstudent/{studentId}");















    }

}
